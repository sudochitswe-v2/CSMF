@model PaginatedSearchResult<CustomerReadViewModel>
@{
    ViewData["Title"] = "Customers";
}

<div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
    <form method="get" asp-action="Index" class="w-75">
        <div class="input-group">
            <input name="search" value="@Model.SearchTerm" placeholder="Search by First Name, Last Name or ID No." class="form-control" />
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search me-1"></i>Search
            </button>
        </div>
    </form>

    <a asp-action="Create" class="btn btn-success">
        <i class="bi bi-plus-circle"></i> New
    </a>

    <!-- Page Size Dropdown -->
    <div class="mb-3">
        <label for="pageSize" class="form-label">Items per page:</label>
        <select id="size" class="form-select w-auto d-inline-block"
                asp-items="@(new List<SelectListItem>
            {
                new SelectListItem { Value = "5", Text = "5" },
                new SelectListItem { Value = "10", Text = "10", Selected = Model.PageSize == 10 },
                new SelectListItem { Value = "25", Text = "25", Selected = Model.PageSize == 25 },
                new SelectListItem { Value = "50", Text = "50", Selected = Model.PageSize == 50 }
            })"
                onchange="changePageSize(this.value)">
        </select>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead class="table">
        <tr>
            <th>Full Name</th>
            <th>Email</th>
            <th>Phones</th>
            <th>Address</th>
            <th>Branch</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Items.Any())
        {
            @foreach (var customer in Model.Items)
            {
                <tr>
                    <td>
                        @($"{customer.FirstName} {customer.LastName}")
                    </td>
                    <td>@customer.Email</td>
                    <td>@customer.Phone</td>
                    <!-- Address - Limited Width -->
                    <td class="text-truncate" style="max-width: 200px;" title="@customer.Address">
                        @customer.Address
                    </td>
                    <td>@customer.Branch.Name</td>
                    <td>
                        <a asp-action="Detail" asp-route-id="@customer.Id" class="btn btn-sm btn-outline-success me-2">
                            <i class="bi bi-eye"></i>
                        </a>
                        <a asp-action="Edit" asp-route-id="@customer.Id" class="btn btn-sm btn-outline-primary me-2">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <form id="delete-form-@customer.Id" asp-action="Delete" asp-route-id="@customer.Id" method="post" class="d-inline">
                            <button type="button" class="btn btn-sm btn-outline-danger"
                                    onclick="confirmDelete('@customer.Id')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </form>
                        <a asp-controller="Reports" asp-action="CustomerLoanStatements" asp-route-id="@customer.Id" class="btn btn-sm btn-outline-info me-2">
                            <i class="bi bi-file-earmark-spreadsheet-fill"></i>
                            Statements
                        </a>

                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">
                    <em>No data avaliable.</em>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Pagination & Page Size Controls -->
<div class="d-flex justify-content-between align-items-center mt-3">
    <div>
        Showing @Model.Items.Count() of @Model.TotalItems customres
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination mb-0">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                var currentSearch = ViewData["SearchTerm"]?.ToString() ?? "";
            }

            <li class="page-item @prevDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-page="@(Model.PageNumber - 1)"
                   asp-route-size="@Model.PageSize"
                   asp-route-searchTerm="@currentSearch">
                    Previous
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-page="@i"
                       asp-route-size="@Model.PageSize"
                       asp-route-searchTerm="@currentSearch">
                        @i
                    </a>
                </li>
            }

            <li class="page-item @nextDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-page="@(Model.PageNumber + 1)"
                   asp-route-size="@Model.PageSize"
                   asp-route-searchTerm="@currentSearch">
                    Next
                </a>
            </li>
        </ul>
    </nav>
</div>
<script>
    function changePageSize(size) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('size', size);
        urlParams.set('page', 1); // Reset to first page
        window.location.search = urlParams.toString();
    }
</script>


